<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yingxs.mybatis.dao.DepartmentMapper">
	
	<!-- DepartmentMapper getDeptById(Integer id); -->
	<select id="getDeptById" resultType="com.yingxs.mybatis.bean.Department">
		select id,dept_name departmentName from tbl_dept where id=#{id} 
	</select>
	
	
	<!-- collection嵌套结果集的方式，定义关联的集合类型元素的属性封装规则 -->
	<!-- Department getDeptByIdPlus(Integer id); -->
	<!-- 1.多表连接查询 -->
	<!-- 场景二:
		查询部门的时候将部门对应的所有员工的信息也查询出来：注释在DepartmentMapper.xml中  -->
	<!--  
		private Integer id;
		private String departmentName;
		private List<Employee> emps;
		
	did  dept_name || eid  last_name  email  gender   -->
	<resultMap type="com.yingxs.mybatis.bean.Department" id="MyDept">
		<id column="did" property="id" />
		<result column="dept_name" property="departmentName"/>
		<!-- collection定义关联集合属性的封装规则  -->
		<collection property="emps" ofType="com.yingxs.mybatis.bean.Employee">
			<!-- 定义这个集合中元素的封装规则 -->
			<id column="eid" property="id" />
			<result column="last_name" property="lastName" />
			<result column="email" property="email" />
			<result column="gender" property="gender" />
		</collection>
		
	</resultMap>
	<select id="getDeptByIdPlus" resultMap="MyDept">
		SELECT d.id did,d.dept_name dept_name,e.id eid,
				e.last_name last_name,e.email email,e.gender gender 
		FROM tbl_dept d 
		LEFT JOIN tbl_employee e
		ON d.id=e.d_id
		WHERE d.id=#{id}
	</select>
	
	
	<!-- 场景二的分步查询 -->
	<!-- Department getDeptByIdStep(Integer id); -->
	<resultMap type="com.yingxs.mybatis.bean.Department" id="MyDeptStep">
		<id column="id" property="id" />
		<result column="dept_name" property="departmentName" />
		<collection property="emps" 
		select="com.yingxs.mybatis.dao.EmployeeMapperPlus.getEmpsByDeptId"
		column="id" fetchType="eager"></collection>
	
	
	</resultMap>
	<select id="getDeptByIdStep" resultMap="MyDeptStep">
		select id,dept_name departmentName from tbl_dept where id=#{id} 
	</select>
	
	<!-- 扩展，多列的值的传递过去
		将多列的值封装map传递
		column="{key1=column1,key2=column2}"
	 -->
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

</mapper>